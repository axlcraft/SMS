services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "5000:5000"
    environment:
      - API_GATEWAY_URL=http://api-gateway:8000
    depends_on:
      - api-gateway

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - auth-service
    # Aquí puedes agregar los otros servicios base

    # Microservicio de Autenticación
  auth-service:
    build: ./services/authentication
    container_name: auth-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=mongodb://auth-db:27017/auth_db
    depends_on:
      - auth-db

  # Base de datos para el servicio de autenticación
  auth-db:
    image: mongo:latest
    container_name: auth-db
    ports:
      - "27017:27017"
    volumes:
      - auth_data:/data/db
  # Microservicio de Métricas
  metrics-service:
    build: ./services/metrics
    container_name: metrics-service
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=${METRICS_DATABASE_URL}
    depends_on:
      metrics-db:
        condition: service_healthy
  # Base de datos para el Microservicio de Métricas
  metrics-db:
    image: postgres
    container_name: metrics-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d metrics_db"]
      interval: 2s
      retries: 10
    ports:  
      - "5432:5432"
    volumes:
      - metrics_data:/var/lib/postgresql/data
volumes:
  auth_data:
  metrics_data:
  analisis_data:
  alerts_data:
      
  # Microservicio de Análisis
  # analisis-service:
  #   build: ./services/analisis
  #   container_name: analisis-service
  #   ports:
  #     - "8002:8002"
  #   environment:
  #     - DATABASE_URL=postgresql://user:password@analisis-db:5432/analisis_db
  #   depends_on:
  #     - analisis-db

  # # Base de datos para el Microservicio de Análisis
  # analisis-db:
  #   image: postgres
  #   container_name: analisis-db
  #   environment:
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=password
  #     - POSTGRES_DB=analisis_db
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - analisis_data:/var/lib/postgresql/data

  # # Microservicio de Alertas
  # alerts-service:
  #   build: ./services/alerts
  #   container_name: alerts-service
  #   ports:
  #     - "8002:8002"
  #   environment:
  #     - DATABASE_URL=postgresql://user:password@alerts-db:5432/alertas_db
  #   depends_on:
  #     - alerts-db

  # # Base de datos para el Microservicio de Alertas
  # alerts-db:
  #   image: postgres
  #   container_name: alerts-db
  #   environment:
  #     - REDIS_PASSWORD=password
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - alertas_data:/var/lib/postgresql/data

